openapi: 3.0.0
info:
  title: Sample API
  description: API Documentation for managing users MS
  version: 1.0.0
servers:
  - url: '/user-management'
    description: Optional server description, e.g. Main (production) server

paths:
  /user:
    get:
      summary: Returns a user by ID.
      tags:
        - user
      operationId: getUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error

  /users:
    get:
      summary: Returns users list.
      tags:
        - users
      operationId: getUsers
      responses:
        '200':
          description: A users object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'

        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error

  /addUser:
    post:
      summary: Add a user to the system
      tags:
        - add user
      operationId: addUser
      responses:
        '200':
          description: A user System object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSystemResponse'

        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error

components:
  schemas:
    UserSystemResponse:
      title: User System Response
      type: object
      properties:
        id:
          type: integer
          format: int64
        phone:
          type: string
        address:
          type: object
          $ref: '#/components/schemas/UserAddress'
      required:
        - id
        - phone
        - address
    UserAddress:
      title: User Address
      type: object
      properties:
        street:
          type: string
        street_name:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        country_code:
          type: string
        postal_code:
          type: string
      required:
        - street
        - street_name
        - city
        - state
        - country
        - country_code
        - postal_code

    UsersResponse:
      title: Users Response
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    UserResponse:
      title: Users Response
      type: object
      properties:
        first_name:
          type: string
        id:
          type: integer
          format: int64
      required:
        - first_name
        - id

    UserRequest:
      title: Users Request
      type: object
      description: Users Request
      properties:
        idUser:
          type: String
          minLength: 1
          maxLength: 10